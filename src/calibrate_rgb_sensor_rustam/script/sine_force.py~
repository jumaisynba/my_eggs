#!/usr/bin/env python
import math
import rospy
from std_msgs.msg import Float64

def mover():
    pub_sine_vel = rospy.Publisher('/sine_vel_command', Float64, queue_size=10)
    rospy.init_node('sine_vel_node')
    rate = rospy.Rate(125)
    start_time = 0

    while not start_time:
        start_time = rospy.Time.now().to_sec()
    while not rospy.is_shutdown():
        elapsed = rospy.Time.now().to_sec() - start_time
        
        #sine force
        #pub_sineforce.publish(110 + math.sin(2*math.pi*0.25*elapsed)*(70))
        
        #square
        #ss = math.sin(2*math.pi*0.25*elapsed);
        #if ss > 0:
        #  p = 180
	#else:
	#  p = 40
        #pub_sineforce.publish(p)
        
        
        #sine force
        pub_sine_vel.publish(math.sin(2*math.pi*0.05*elapsed)*(0.65))

        #square
        #ss = math.sin(2*math.pi*0.05*elapsed);
        #if ss > 0:
        #  p = 2
	#else:
	#  p = 0.7
        #pub_sineforce.publish(p)
        
        rate.sleep()

if __name__ == '__main__':
    try:
        mover()
    except rospy.ROSInterruptException:
        pass
